#!/usr/bin/env python3
"""
Chamber Voice Specification
Define the complete Chamber voice constellation with required works and ideal quantities
"""

from collections import OrderedDict
import csv
from pathlib import Path

def define_chamber_voice_specification():
    """Complete specification for Chamber voice representation"""
    
    # Core Chamber Voices - Essential for full operation
    core_chamber_voices = OrderedDict([
        ('Gaston Bachelard', {
            'role': 'Phenomenologist of Space and Elements',
            'essential_works': [
                'The Poetics of Space',
                'The Psychoanalysis of Fire',
                'Air and Dreams',
                'Water and Dreams', 
                'Earth and Reveries of Will',
                'The Poetics of Reverie'
            ],
            'supplementary_works': [
                'The Right to Dream',
                'The Flame of a Candle',
                'Lautr√©amont',
                'The New Scientific Spirit'
            ],
            'ideal_quantity': '6-8 works',
            'minimum_quantity': '3 works',
            'thematic_focus': ['space', 'dwelling', 'reverie', 'elements', 'imagination'],
            'quote_style': 'poetic',
            'dialectical_relationships': ['Alexander (space)', 'Benjamin (dream)', 'Weil (attention)'],
            'current_status': 'PRESENT (5 works)'
        }),
        
        ('Christopher Alexander', {
            'role': 'Architect of Living Patterns',
            'essential_works': [
                'A Pattern Language',
                'The Timeless Way of Building',
                'The Nature of Order (4 volumes)',
                'A City is Not a Tree',
                'The Oregon Experiment'
            ],
            'supplementary_works': [
                'Notes on the Synthesis of Form',
                'Houses Generated by Patterns',
                'A New Theory of Urban Design',
                'The Production of Houses'
            ],
            'ideal_quantity': '8-10 works',
            'minimum_quantity': '4 works',
            'thematic_focus': ['patterns', 'wholeness', 'living systems', 'architecture', 'cities'],
            'quote_style': 'systematic',
            'dialectical_relationships': ['Bachelard (dwelling)', 'Mumford (cities)', 'Jacobs (urban life)'],
            'current_status': 'MISSING - need authentic Alexander works'
        }),
        
        ('Walter Benjamin', {
            'role': 'Critical Theorist of Modernity',
            'essential_works': [
                'The Work of Art in the Age of Mechanical Reproduction',
                'Illuminations',
                'The Arcades Project',
                'One-Way Street',
                'The Origin of German Tragic Drama'
            ],
            'supplementary_works': [
                'Selected Writings (4 volumes)',
                'The Correspondence of Walter Benjamin',
                'Moscow Diary',
                'Berlin Chronicle'
            ],
            'ideal_quantity': '6-8 works',
            'minimum_quantity': '3 works',
            'thematic_focus': ['aura', 'reproduction', 'modernity', 'experience', 'memory'],
            'quote_style': 'poetic',
            'dialectical_relationships': ['Berger (seeing)', 'Arendt (politics)', 'Adorno (aesthetics)'],
            'current_status': 'PARTIAL (2 works) - need core Benjamin texts'
        }),
        
        ('Hannah Arendt', {
            'role': 'Political Philosopher of Action',
            'essential_works': [
                'The Human Condition',
                'The Origins of Totalitarianism',
                'Between Past and Future',
                'On Revolution',
                'The Life of the Mind',
                'Crises of the Republic'
            ],
            'supplementary_works': [
                'Men in Dark Times',
                'On Violence',
                'Lectures on Kant\'s Political Philosophy',
                'The Promise of Politics'
            ],
            'ideal_quantity': '6-8 works',
            'minimum_quantity': '4 works',
            'thematic_focus': ['action', 'plurality', 'politics', 'thinking', 'judgment'],
            'quote_style': 'analytical',
            'dialectical_relationships': ['Weil (action/contemplation)', 'Benjamin (politics)', 'Levinas (plurality)'],
            'current_status': 'MINIMAL (1 work) - need core Arendt texts'
        }),
        
        ('Simone Weil', {
            'role': 'Mystic of Attention and Justice',
            'essential_works': [
                'Gravity and Grace',
                'The Need for Roots',
                'Waiting for God',
                'Oppression and Liberty',
                'Notebooks',
                'Factory Journal'
            ],
            'supplementary_works': [
                'Letter to a Priest',
                'Intimations of Christianity',
                'On Science, Necessity and the Love of God',
                'Selected Essays'
            ],
            'ideal_quantity': '6-7 works',
            'minimum_quantity': '3 works',
            'thematic_focus': ['attention', 'affliction', 'necessity', 'grace', 'justice'],
            'quote_style': 'contemplative',
            'dialectical_relationships': ['Arendt (action/contemplation)', 'Levinas (responsibility)', 'Bachelard (attention)'],
            'current_status': 'MINIMAL (2 works) - need core Weil texts'
        }),
        
        ('Emmanuel Levinas', {
            'role': 'Philosopher of the Face and Responsibility',
            'essential_works': [
                'Totality and Infinity',
                'Otherwise than Being or Beyond Essence',
                'Difficult Freedom',
                'Ethics and Infinity',
                'Entre Nous'
            ],
            'supplementary_works': [
                'Time and the Other',
                'Existence and Existents',
                'God, Death, and Time',
                'Of God Who Comes to Mind'
            ],
            'ideal_quantity': '5-6 works',
            'minimum_quantity': '3 works',
            'thematic_focus': ['face', 'responsibility', 'infinity', 'ethics', 'alterity'],
            'quote_style': 'contemplative',
            'dialectical_relationships': ['Arendt (plurality)', 'Weil (responsibility)', 'Heidegger (being/ethics)'],
            'current_status': 'MISSING - need authentic Levinas works'
        }),
        
        ('Martin Heidegger', {
            'role': 'Philosopher of Being and Dwelling',
            'essential_works': [
                'Being and Time',
                'The Question Concerning Technology',
                'Poetry, Language, Thought',
                'What is Called Thinking?',
                'Introduction to Metaphysics'
            ],
            'supplementary_works': [
                'The Origin of the Work of Art',
                'Basic Writings',
                'Pathmarks',
                'Country Path Conversations',
                'Building Dwelling Thinking'
            ],
            'ideal_quantity': '6-8 works',
            'minimum_quantity': '4 works',
            'thematic_focus': ['being', 'dwelling', 'technology', 'thinking', 'language'],
            'quote_style': 'meditative',
            'dialectical_relationships': ['Bachelard (dwelling)', 'Alexander (building)', 'Levinas (ethics/being)'],
            'current_status': 'MISSING - need authentic Heidegger works'
        }),
        
        ('Robin Wall Kimmerer', {
            'role': 'Indigenous Scientist of Reciprocity',
            'essential_works': [
                'Braiding Sweetgrass',
                'Gathering Moss',
                'The Council of Pecans'
            ],
            'supplementary_works': [
                'Native Science (journal articles)',
                'Ancient Futures, Sacred Present (essays)',
                'Learning the Grammar of Animacy'
            ],
            'ideal_quantity': '3-4 works',
            'minimum_quantity': '2 works',
            'thematic_focus': ['reciprocity', 'indigenous knowledge', 'ecology', 'animacy', 'gratitude'],
            'quote_style': 'narrative',
            'dialectical_relationships': ['Alexander (natural patterns)', 'Weil (attention to nature)', 'Zuboff (vs extraction)'],
            'current_status': 'MISSING - need Kimmerer works'
        }),
        
        ('Shoshana Zuboff', {
            'role': 'Critical Theorist of Surveillance Capitalism',
            'essential_works': [
                'The Age of Surveillance Capitalism',
                'In the Age of the Smart Machine'
            ],
            'supplementary_works': [
                'The Support Economy',
                'Creating Value in the Network Economy (essays)'
            ],
            'ideal_quantity': '2-3 works',
            'minimum_quantity': '2 works',
            'thematic_focus': ['surveillance capitalism', 'behavioral modification', 'instrumentarian power', 'human futures'],
            'quote_style': 'analytical',
            'dialectical_relationships': ['Benjamin (technology)', 'Arendt (totalitarianism)', 'Weil (oppression)'],
            'current_status': 'MISSING - critical for contemporary analysis'
        }),
        
        ('John Berger', {
            'role': 'Critic of Ways of Seeing',
            'essential_works': [
                'Ways of Seeing',
                'About Looking',
                'The Shape of a Pocket',
                'Here Is Where We Meet',
                'A Fortunate Man'
            ],
            'supplementary_works': [
                'Another Way of Telling',
                'Understanding a Photograph',
                'Selected Essays',
                'Bento\'s Sketchbook',
                'And Our Faces, My Heart, Brief as Photos'
            ],
            'ideal_quantity': '8-12 works',
            'minimum_quantity': '5 works',
            'thematic_focus': ['seeing', 'looking', 'art', 'peasantry', 'migration', 'stories'],
            'quote_style': 'poetic',
            'dialectical_relationships': ['Benjamin (seeing/reproduction)', 'Bachelard (space/image)', 'Weil (attention)'],
            'current_status': 'EXCELLENT (18 works) - fully represented'
        }),
        
        ('Aldus Manutius', {
            'role': 'Master of Typography and Book Arts',
            'essential_works': [
                'Hypnerotomachia Poliphili',
                'The Aldine Press: A History',
                'Aldus Manutius: The Legacy of a Renaissance Printer'
            ],
            'supplementary_works': [
                'Renaissance Book Design',
                'The Aldine Editions',
                'Portable Books and Italic Type'
            ],
            'ideal_quantity': '3-4 works',
            'minimum_quantity': '2 works',
            'thematic_focus': ['typography', 'book design', 'printing', 'scholarship', 'portable knowledge'],
            'quote_style': 'classical',
            'dialectical_relationships': ['Benjamin (reproduction)', 'Alexander (pattern)', 'Berger (image/text)'],
            'current_status': 'MISSING - essential for typography/printing wisdom'
        })
    ])
    
    # Extended Constellation - Important supporting voices
    extended_constellation = OrderedDict([
        ('Maurice Merleau-Ponty', {
            'role': 'Phenomenologist of Perception',
            'key_works': ['Phenomenology of Perception', 'The Visible and the Invisible', 'Eye and Mind'],
            'ideal_quantity': '3-4 works',
            'relationships': ['Bachelard', 'Heidegger', 'Berger'],
            'priority': 'High'
        }),
        
        ('Jane Jacobs', {
            'role': 'Urban Life Observer',
            'key_works': ['The Death and Life of Great American Cities', 'The Economy of Cities', 'Cities and the Wealth of Nations'],
            'ideal_quantity': '3-4 works',
            'relationships': ['Alexander', 'Arendt', 'Mumford'],
            'priority': 'High'
        }),
        
        ('Lewis Mumford', {
            'role': 'Technology and City Critic',
            'key_works': ['Technics and Civilization', 'The City in History', 'The Myth of the Machine'],
            'ideal_quantity': '3-4 works',
            'relationships': ['Alexander', 'Zuboff', 'Jacobs'],
            'priority': 'High'
        }),
        
        ('Jacques Derrida', {
            'role': 'Philosopher of Deconstruction',
            'key_works': ['Of Grammatology', 'Writing and Difference', 'The Postcard'],
            'ideal_quantity': '3-4 works',
            'relationships': ['Levinas', 'Benjamin', 'Heidegger'],
            'priority': 'Medium'
        }),
        
        ('Juhani Pallasmaa', {
            'role': 'Phenomenological Architect',
            'key_works': ['The Eyes of the Skin', 'The Thinking Hand', 'The Embodied Image'],
            'ideal_quantity': '3-4 works',
            'relationships': ['Alexander', 'Bachelard', 'Merleau-Ponty'],
            'priority': 'Medium'
        })
    ])
    
    return core_chamber_voices, extended_constellation

def analyze_current_chamber_status():
    """Analyze current library against Chamber specifications"""
    
    core_voices, extended_voices = define_chamber_voice_specification()
    
    # Read current library status
    csv_file = Path("apple_books_library.csv")
    current_library = {}
    
    if csv_file.exists():
        with open(csv_file, 'r', encoding='utf-8') as f:
            reader = csv.DictReader(f)
            for book in reader:
                author = book['author']
                if author not in current_library:
                    current_library[author] = []
                current_library[author].append(book['title'])
    
    # Generate complete specification report
    with open("chamber_voice_complete_specification.md", "w") as f:
        f.write("# Complete Chamber Voice Specification\n\n")
        f.write("*A comprehensive guide to building the full Chamber constellation*\n\n")
        
        f.write("## Current Status Summary\n\n")
        
        ready_voices = 0
        partial_voices = 0
        missing_voices = 0
        
        for voice_name, voice_data in core_voices.items():
            status = voice_data['current_status']
            if 'EXCELLENT' in status or 'PRESENT' in status:
                ready_voices += 1
            elif 'PARTIAL' in status or 'MINIMAL' in status:
                partial_voices += 1
            else:
                missing_voices += 1
        
        f.write(f"- **Ready for Chamber protocols**: {ready_voices}/11 voices\n")
        f.write(f"- **Partially represented**: {partial_voices}/11 voices\n")
        f.write(f"- **Missing completely**: {missing_voices}/11 voices\n")
        f.write(f"- **Chamber readiness**: {(ready_voices/11)*100:.1f}%\n\n")
        
        f.write("## Core Chamber Voices (Essential)\n\n")
        
        for voice_name, voice_data in core_voices.items():
            f.write(f"### {voice_name}\n")
            f.write(f"**Role**: {voice_data['role']}  \n")
            f.write(f"**Status**: {voice_data['current_status']}  \n")
            f.write(f"**Ideal quantity**: {voice_data['ideal_quantity']}  \n")
            f.write(f"**Quote style**: {voice_data['quote_style']}  \n\n")
            
            f.write("**Essential works** (priority order):\n")
            for i, work in enumerate(voice_data['essential_works'], 1):
                f.write(f"{i}. {work}\n")
            
            f.write(f"\n**Dialectical relationships**: {', '.join(voice_data['dialectical_relationships'])}\n")
            f.write(f"**Thematic focus**: {', '.join(voice_data['thematic_focus'])}\n\n")
            
            if voice_data['supplementary_works']:
                f.write("**Supplementary works**:\n")
                for work in voice_data['supplementary_works'][:3]:
                    f.write(f"- {work}\n")
                if len(voice_data['supplementary_works']) > 3:
                    f.write(f"- ... and {len(voice_data['supplementary_works'])-3} more\n")
            
            f.write("\n---\n\n")
        
        f.write("## Extended Constellation (Supporting)\n\n")
        
        for voice_name, voice_data in extended_voices.items():
            f.write(f"### {voice_name}\n")
            f.write(f"**Role**: {voice_data['role']}  \n")
            f.write(f"**Priority**: {voice_data['priority']}  \n")
            f.write(f"**Key works**: {', '.join(voice_data['key_works'][:3])}  \n")
            f.write(f"**Relationships**: {', '.join(voice_data['relationships'])}  \n\n")
        
        f.write("## Acquisition Priorities\n\n")
        
        f.write("### Immediate Priority (Complete the Core)\n\n")
        
        high_priority = []
        medium_priority = []
        
        for voice_name, voice_data in core_voices.items():
            if 'MISSING' in voice_data['current_status']:
                high_priority.append((voice_name, voice_data['essential_works'][:2]))
            elif 'PARTIAL' in voice_data['current_status'] or 'MINIMAL' in voice_data['current_status']:
                medium_priority.append((voice_name, voice_data['essential_works'][:3]))
        
        for voice_name, works in high_priority:
            f.write(f"**{voice_name}** (Missing entirely):\n")
            for work in works:
                f.write(f"- {work}\n")
            f.write("\n")
        
        f.write("### Secondary Priority (Strengthen Existing)\n\n")
        
        for voice_name, works in medium_priority:
            f.write(f"**{voice_name}** (Needs strengthening):\n")
            for work in works:
                f.write(f"- {work}\n")
            f.write("\n")
        
        f.write("## Integration Guidelines\n\n")
        f.write("### Minimum Viable Chamber\n")
        f.write("For basic Chamber protocols, ensure at least:\n")
        f.write("- 3 works each from Bachelard, Alexander, Benjamin, Arendt, Weil\n")
        f.write("- 2 works each from Levinas, Heidegger, Kimmerer, Zuboff\n")
        f.write("- 5 works from Berger (already achieved)\n")
        f.write("- 2 works from Manutius\n\n")
        
        f.write("### Optimal Chamber\n")
        f.write("For full dialectical richness:\n")
        f.write("- All essential works from each core voice\n")
        f.write("- 3-5 extended constellation voices\n")
        f.write("- Balanced representation across thematic domains\n\n")
        
        f.write("### Dialectical Balance\n")
        f.write("Ensure representation across:\n")
        f.write("- **Space/Dwelling**: Bachelard, Alexander, Heidegger, Pallasmaa\n")
        f.write("- **Politics/Action**: Arendt, Weil, Benjamin, Zuboff\n")
        f.write("- **Perception/Art**: Berger, Benjamin, Merleau-Ponty\n")
        f.write("- **Technology/Society**: Zuboff, Benjamin, Mumford, Alexander\n")
        f.write("- **Ethics/Responsibility**: Levinas, Weil, Arendt, Kimmerer\n")
    
    print("üìÑ Complete specification saved to: chamber_voice_complete_specification.md")
    
    return core_voices, extended_voices

if __name__ == "__main__":
    print("üèõÔ∏è CHAMBER VOICE SPECIFICATION")
    print("=" * 50)
    
    core_voices, extended_voices = analyze_current_chamber_status()
    
    print(f"\nüìö Core Chamber voices defined: {len(core_voices)}")
    print(f"üåê Extended constellation defined: {len(extended_voices)}")
    print(f"üìñ Total ideal works: {sum(len(v['essential_works']) + len(v['supplementary_works']) for v in core_voices.values())}")
    
    print(f"\nüéØ Current Chamber readiness analysis complete")
    print(f"üìã See chamber_voice_complete_specification.md for full details")